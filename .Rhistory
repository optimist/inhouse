price_fill(df)
head(df, 50)
head(df, 48)
head(price_fill(df), 48)
devtools::document()
devtools::install()
help(package = "inhouse")
document::install()
devtools::install()
?gsub
where <- "Where x in a"
grepl("where", where, ignore.case = TRUE)
gsub("where", "", where, ignore.case = TRUE)
paste("WHERE", where)
devtools::install()
devtools::install()
sprintf("fetching query %s\n", query)
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
inhouse::price_ids()
grep("cetes", inhouse::price_ids(), value = TRUE)
library(inhouse)
devtools::document()
devtools::install()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::install()
devtools::install_github("optimist/inhouse")
get_position(date_seq("20170131/20170228"), 50499) %>% select(fecha, tot) %>% distinct() %>% summarize(sum(tot))
library(dplyr)
library(inhouse)
get_position(date_seq("20170131/20170228"), 50499) %>% select(fecha, tot) %>% distinct() %>% summarize(sum(tot))
get_position(date_seq("20170131/20170228"), 50499) %>% select(fecha, tot) %>% distinct() %>% summarize(mean(tot))
get_position(date_seq("20161231/"), 50499) %>% select(fecha, tot) %>% distinct() %>% summarize(sum(tot))
get_position(date_seq("20161231/20170228"), 50499) %>% select(fecha, tot) %>% distinct() %>% summarize(sum(tot))
get_position(date_seq("20161231/20170228"), 50499) %>% select(fecha, tot) %>% distinct() %>% summarize(mean(tot))
get_position(date_seq("20161231/20170228"), 50499) %>% select(fecha, tot) %>% distinct()
?is.xts
is.xts(data.frame())
xts::is.xts(data.frame())
a <- xts(1, Sys.date())
a <- xts::xts(1, Sys.date())
a <- xts::xts(1, Sys.Date())
a
df <- xts::xts(1, Sys.Date())
is.data.frame(df)
xts::is.xts(df)
as.Date(1902)
can_be_date <- which(apply(df, 2, class) == "Date")
can_be_date
apply(df, 2, class)
apply(df, 2, class) == "Date"
which(apply(df, 2, class) == "Date")
date_col <- which(apply(df, 2, class) == "Date")[1]
date_col
date_col <- ifelse(is.null(date_col), which(apply(df, 2, class) == "Date")[1], date_col)
if (is.na(date_col)) stop("No date column")
df <- xts[df[-date_col], order.by = date_col]
df <- data.frame(a=1, b=2, fecha=Sys.Date())
date_col <- ifelse(is.null(date_col), which(apply(df, 2, class) == "Date")[1],  date_col)
date_col
which(apply(df, 2, class) == "Date")[1]
which(apply(df, 2, class) == "Date")
which(apply(df, 2, class)
apply(df, 2, class)
class(Sys.Date())
df
sapply(df, class)
date_col <- ifelse(is.null(date_col), which(sapply(df, class) == "Date")[1],  date_col)
date_col
which(sapply(df, class) == "Date")
which(sapply(df, class) == "Date")[1]
date_col
date_col = NULL
date_col <- ifelse(is.null(date_col), which(sapply(df, class) == "Date")[1],  date_col)
date_col
if (is.na(date_col)) stop("No date column")
df <- xts[df[-date_col], order.by = date_col]
library(xts)
df <- xts[df[-date_col], order.by = date_col]
df
date_col
df[-date_col]
df[[date_col]]
df <- xts[df[-date_col], order.by = df[[date_col]]]
df <- xts(df[-date_col], order.by = df[[date_col]])
df
fill_prices <- function(df, fill_missing_init = TRUE) {
if (is.xts(df)) {
dat <- data.frame(coredata(df))
} else {
dat <- df
}
filled_dat <- tidyr::fill_(dat, names(dat)[-1], .direction = "down")
if (fill_missing_init) {
filled_dat <- tidyr::fill_(dat, names(filled_dat)[-1], .direction = "up")
}
if (is.xts(df)) {
filled_df <- df
coredata(filled_df) <- as.matrix(filled_dat)
} else {
filled_df <- filled_dat
}
filled_df
}
aa <- xts(c(NA, 1,NA,2), order.by = Sys.Date() - 1:4)
aa
fill_prices(aa)
fill_prices(data.frame(aa))
df <-  aa
is.xts(df)
dat <- data.frame(coredata(df))
dat
fill_prices <- function(df, fill_missing_init = TRUE) {
if (is.xts(df)) {
dat <- data.frame(coredata(df))
} else {
dat <- df
}
filled_dat <- tidyr::fill_(dat, names(dat), .direction = "down")
if (fill_missing_init) {
filled_dat <- tidyr::fill_(dat, names(filled_dat), .direction = "up")
}
if (is.xts(df)) {
filled_df <- df
coredata(filled_df) <- as.matrix(filled_dat)
} else {
filled_df <- filled_dat
}
filled_df
}
fill_prices(aa)
aa
aa <- xts(c(NA, 1,NA,2), order.by = Sys.Date() + 1:4)
fill_prices(aa)
aa
aa <- xts(c(NA, 1,NA,2), order.by = Sys.Date() - 1:4)
aa
if (is.xts(df)) {
dat <- data.frame(coredata(df))
} else {
dat <- df
}
dat
filled_dat <- tidyr::fill_(dat, names(dat), .direction = "down")
filled_dat
if (fill_missing_init) {
filled_dat <- tidyr::fill_(dat, names(filled_dat), .direction = "up")
}
tidyr::fill_(dat, names(filled_dat), .direction = "up")
filled_dat <- tidyr::fill_(filled_dat, names(filled_dat), .direction = "up")
filled_dat
aa
fill_prices(aa)
fill_prices <- function(df, fill_missing_init = TRUE) {
if (is.xts(df)) {
dat <- data.frame(coredata(df))
} else {
dat <- df
}
filled_dat <- tidyr::fill_(dat, names(dat), .direction = "down")
if (fill_missing_init) {
filled_dat <- tidyr::fill_(filled_dat, names(filled_dat), .direction = "up")
}
if (is.xts(df)) {
filled_df <- df
coredata(filled_df) <- as.matrix(filled_dat)
} else {
filled_df <- filled_dat
}
filled_df
}
fill_prices(aa)
fill_prices(data.frame(aa))
rm(fill_prices)
library(inhouse)
?rollProd
library(RcppRoll)
dly_ret <- function(df, halflife, roll = 1, date_col = NULL) {
is_xts_df <- is.xts(df)
if (!is_xts_df) {
date_col <- ifelse(is.null(date_col), which(sapply(df, class) == "Date")[1],  date_col)
if (is.na(date_col)) stop("No date column")
col_names <- names(df)
date_col_name <- col_names[date_col]
df <- xts(df[-date_col], order.by = df[[date_col]])
names(df) <- col_names[-date_col]
}
dly_ret <- df/xts::lag.xts(df)-1 # retornos
dly_ret[is.na(dly_ret)] <- 0 # rellenar ceros
dly_ret <- (RcppRoll::rollProd(dly_ret, roll)+1)^(1/roll)-1
if (!is_xts_df) {
dly_ret <- data.frame(fecha = index(dly_ret), dly_ret, check.names = FALSE)
names(dly_ret)[1] <- date_col_name
dly_ret <- dly_ret[ ,col_names]
}
return(dly_ret)
}
aa
dly_ret(aa)
??rollProf
rollProd <- function(x, roll=1) {
rollprod <- apply(x+1,2, RcppRoll::roll_prod,n=roll)-1
date <- index(x)
rollprod <- xts(rollprod, order.by=date[roll:length(date)])
return(rollprod)
}
dly_ret(aa)
dly_ret <- function(df, halflife, roll = 1, date_col = NULL) {
is_xts_df <- is.xts(df)
if (!is_xts_df) {
date_col <- ifelse(is.null(date_col), which(sapply(df, class) == "Date")[1],  date_col)
if (is.na(date_col)) stop("No date column")
col_names <- names(df)
date_col_name <- col_names[date_col]
df <- xts(df[-date_col], order.by = df[[date_col]])
names(df) <- col_names[-date_col]
}
dly_ret <- df/xts::lag.xts(df)-1 # retornos
dly_ret[is.na(dly_ret)] <- 0 # rellenar ceros
dly_ret <- (rollProd(dly_ret, roll)+1)^(1/roll)-1
if (!is_xts_df) {
dly_ret <- data.frame(fecha = index(dly_ret), dly_ret, check.names = FALSE)
names(dly_ret)[1] <- date_col_name
dly_ret <- dly_ret[ ,col_names]
}
return(dly_ret)
}
dly_ret(aa)
dly_ret(aa + 1)
aa + 1
dly_ret(fill_prices(aa) + 1)
dly_ret(fill_prices(aa))
dly_ret(fill_prices(aa) + 2)
dly_ret(fill_prices(data.frame(fecha = index(aa), aa)))
dly_ret <- function(df, halflife, roll = 1, date_col = NULL) {
is_xts_df <- is.xts(df)
if (!is_xts_df) {
date_col <- ifelse(is.null(date_col), which(sapply(df, class) == "Date")[1],  date_col)
if (is.na(date_col)) stop("No date column")
col_names <- names(df)
date_col_name <- col_names[date_col]
df <- xts(df[-date_col], order.by = df[[date_col]])
names(df) <- col_names[-date_col]
}
dly_ret <- df/xts::lag.xts(df)-1 # retornos
dly_ret[is.na(dly_ret)] <- 0 # rellenar ceros
dly_ret <- (rollProd(dly_ret, roll)+1)^(1/roll)-1
if (!is_xts_df) {
dly_ret <- data.frame(fecha = index(dly_ret), dly_ret, check.names = FALSE, row.names = NULL)
names(dly_ret)[1] <- date_col_name
dly_ret <- dly_ret[ ,col_names]
}
return(dly_ret)
}
dly_ret(fill_prices(data.frame(fecha = index(aa), aa)))
dly_ret(fill_prices(data.frame(fecha = index(aa), aa + 1)))
library(inhouse)
devtools::document()
devtools::install()
help(package = "inhouse")
library(inhouse)
tq_get(c("SPY", "SHV")) %>% tq_spread()
devtools::document()
library(inhouse)
devtools::install()
tq_get(c("SPY", "SHV")) %>% tq_spread()
devtools::document()
devtools::install()
tq_get(c("SPY", "SHV")) %>% tq_spread()
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret)
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret()
?roll_prod
?rollapply
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret() + 1 %>% apply(2, 1, prod) - 1
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret() %>% apply(2, 1, prod)
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret() %>% apply(1, prod)
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret() %>% apply(., 2, prod)
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret() %>% apply(2, prod)
tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret()
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% dly_ret()
head(pp)
?rollapply
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 1, function(x) x[2] / x[1])
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 1, function(x) print(x))
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 2, function(x) print(x))
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 1, function(x) x[2] / x[1])
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 2, function(x) x[2] / x[1])
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 2, function(x) as.numeric(x)[2] / as.numeric(x)[1])
pp
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(.[, -1], width = 2, function(x) as.numeric(x)[2] / as.numeric(x)[1])
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% .[, -1] %>% rollapply(width = 2, function(x) as.numeric(x)[2] / as.numeric(x)[1])
pp
tq_get(c("SPY", "SHV")) %>% tq_spread()
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 2, function(x) x / xts::lag.xts(x))
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% rollapply(width = 2, function(x) xts::lag.xts(x))
head(pp)
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% .[ ,-1] %>% rollapply(width = 2, function(x) xts::lag.xts(x))
pp
head(pp)
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% .[ ,-1] %>% rollapply(width = 2, function(x) x/xts::lag.xts(x))
pp
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread() %>% .[, -1] %>% rollapply(width = 2, function(x) as.numeric(x)[2] / as.numeric(x)[1])
head(pp)
head( tq_get(c("SPY", "SHV")) %>% tq_spread())
head( tq_get(c("SPY", "SHV")) %>% tq_spread(), 50)
head(pp, 40)
?rollapply.xts
tq_spread <- function(tbl, as_xts = FALSE, what = "close", ...) {
if (!(what %in% c("open", "close", "high", "low", "volume", "adjusted"))) {
stop('type must be one of "open", "close", "high", "low", "volume", "adjusted"')
}
price <- tbl
if (names(tbl)[1] == "symbol") {
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
spread(symbol, close) %>%
as.data.frame(check.names = FALSE)
} else {
price <- price %>%
select_(.dots = c("date", type))
if (as_xts) {
return(as_xts(price))
} else {
return(data.frame(price, check.names = FALSE))
}
}
price
}
library(inhouse)
head( tq_get(c("SPY", "SHV")) %>% tq_spread(as_xts = TRUE), 50)
library(inhouse)
rm(tq_spread)
library(inhouse)
head( tq_get(c("SPY", "SHV")) %>% tq_spread(as_xts = TRUE), 50)
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread(as_xts = TRUE)
devtools::document()
devtools::isntall()
devtools::install()
??as.data.frame
devtools::install()
devtools::document()
devtools::install()
library(inhouse)
pp <- tq_get(c("SPY", "SHV")) %>% tq_spread(as_xts = TRUE)
tbl <- tq_get(c("SPY", "SHV"))
tbl
price <- as_data_frame(tbl)
library(tibble)
price <- as_data_frame(tbl)
price
names(tbl)[1] == "symbol"
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
spread(symbol, close)
library(dplyr)
what = "adjsuted"
what = "adjusted"
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
spread(symbol, close)
library(tidyr)
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
spread(symbol, close)
TBL
tbl
what
?rename
price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename(what = matches(what))
what
price %>%
select_(.dots = c("date", "symbol", what))
price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = matches(what))
price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = what)
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = matches(what)) %>%
spread(symbol, what)
price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = matches(what)
)
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = what) %>%
spread(symbol, what)
price <- as_data_frame(tbl)
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = what) %>%
spread(symbol, what)
price
as_xts
library(tidyquant)
as_xts
convert_xts = TRUE
convert_xts
rm(as_xts)
as_xts
as_xts(price)
price
as_xts(price, date_col = 1)
as_xts(price, date_col = date)
ppp <- as_xts(price, date_col = date)
ppp
tq_spread <- function(tbl, convert_xts = FALSE, what = "close", ...) {
if (!(what %in% c("open", "close", "high", "low", "volume", "adjusted"))) {
stop('type must be one of "open", "close", "high", "low", "volume", "adjusted"')
}
price <- as_data_frame(tbl)
if (names(tbl)[1] == "symbol") {
price <- price %>%
select_(.dots = c("date", "symbol", what)) %>%
rename_(what = what) %>%
spread(symbol, what)
} else {
price <- price %>%
select_(.dots = c("date", what))
if (convert_xts) {
return(as_xts(price, date_col = date))
} else {
return(data.frame(price, check.names = FALSE))
}
}
price
}
ppp <-  tq_get(c("SPY", "SHV")) %>% tq_spread()
ppp <-  tq_get(c("SPY", "SHV")) %>% tq_spread(convert_xts = TRUE)
ppp
devtools::document()
devtools::document()
devtools::document()
devtools::install()
library(inhouse)
library(inhouse)
pp <- tq_get(spl("MXN=X", "SPY"), from = "2015-12-31")
pp
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31")
pp
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31") %>% tq_spread()
tibble::as_data_frame
devtools::document()
setwd("C:/Github/inhouse")
rm(list=ls())
devtools::document()
devtools::document()
devtools::install()
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31") %>% tq_spread()
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31") %>% tq_spread(convert_xts = TRUE)
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31") %>% tq_spread(as_xts = TRUE)
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31") %>% tq_spread(as_xts = TRUE)
pp <- tq_get(spl("SHV, SPY"), from = "2015-12-31") %>% tq_spread(as_xts = TRUE)
devtools::install()
pp <- tq_get(spl("MXN=X, SPY"), from = "2015-12-31") %>% tq_spread(as_xts = TRUE)
if (accumulate) coredata(dly_ret) <- apply(dly_ret, 3, function(x) cumprod(x + 1) - 1)
library(inhouse)
library(inhouse)
document::document()
devtools::document()
devtools::install()
library(inhouse)
library(inhouse)
library(inhouse)
x <- get_prices(date_seq("20161230/"), c("1ispy_", "1ishv_"))
x
x <- x[ ,-1]
x
x <- as.matrix(x)
nrow(as.matrix(x))
col_means <- apply(x, 2, optimist_mean, halflife)
halflife = 10
col_means <- apply(x, 2, optimist_mean, halflife)
col_means
x <- t(apply(x, 1, function(x) x - col_means))
x
x2 <- apply(x, 2, function(x) x/wt)
wt <- optimist_wt(nrow(x), halflife)
wt
x2 <- apply(x, 2, function(x) x/wt)
x2
wt
x2 <- apply(x, 2, function(x) x * wt)
x2
1-sum(wt^2)
mat <- (t(x) %*% x ) / (1-sum(wt^2)) # el coeficiente es para arreglar el sesgo
mat
var <- diag(mat)
var
col_sd <- sqrt(diag(mat))
col_sd
col_sd <- sqrt(diag(mat))
mat <- t(apply(mat, 1, function(x) x/col_sd))
mat <- apply(mat, 2, function(x) x/col_sd)
mat
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
