}
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie)) %>%
#group
group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon)) %>%
mutate(perc = mon/tot) %>%
as.data.frame()
contrato = NULL
con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username="cism", password="cism", dbname="portafolio")
query <- paste("select ",
"fecha, carteramodelo, contrato, tot, reporto, tipo, emisora, serie, precio, tit, mon ",
"from posiciones where ",
"fecha in ('",
paste(fecha, collapse = "','"),
"') ",
sep="")
if(!is.null(contrato)) {
query <- paste(query,
"and contrato in ('",
paste(contrato, collapse ="','"),
"') ",
sep="")
}
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie)) %>%
#group
group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon)) %>%
mutate(perc = mon/tot) %>%
as.data.frame()
asset_id <- function(tipo, emisora, serie) {
tipo[nchar(tipo) == 1] <- paste0(tipo[nchar(tipo) == 1], "_")
id <- tolower(paste0(tipo, emisora, serie))
id <- gsub("\\*|\\+|\\-", "_", id)
id
}
con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username="cism", password="cism", dbname="portafolio")
query <- paste("select ",
"fecha, carteramodelo, contrato, tot, reporto, tipo, emisora, serie, precio, tit, mon ",
"from posiciones where ",
"fecha in ('",
paste(fecha, collapse = "','"),
"') ",
sep="")
if(!is.null(contrato)) {
query <- paste(query,
"and contrato in ('",
paste(contrato, collapse ="','"),
"') ",
sep="")
}
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie)) %>%
#group
group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon)) %>%
mutate(perc = mon/tot) %>%
as.data.frame()
sum(pos$mon)
pos$tit[pos$emisora=="EFECTIVO"] <- pos$mon[pos$emisora=="EFECTIVO"]
sum(pos$mon)
pos$mon[pos$emisora=="EFECTIVO"]
pos$tit[pos$emisora=="EFECTIVO"]
pos[pos$emisora=="EFECTIVO", ]
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie))
pos[pos$emisora=="EFECTIVO", ]
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie))
con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username="cism", password="cism", dbname="portafolio")
query <- paste("select ",
"fecha, carteramodelo, contrato, tot, reporto, tipo, emisora, serie, precio, tit, mon ",
"from posiciones where ",
"fecha in ('",
paste(fecha, collapse = "','"),
"') ",
sep="")
if(!is.null(contrato)) {
query <- paste(query,
"and contrato in ('",
paste(contrato, collapse ="','"),
"') ",
sep="")
}
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie))
pos[pos$emisora=="EFECTIVO", ]
pos<- pos  %>%   group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon)) %>%
mutate(perc = mon/tot) %>%
as.data.frame()
pos
pos$tit[pos$emisora=="EFECTIVO"] <- pos$mon[pos$emisora=="EFECTIVO"]
pos[pos$tit != 0, ]
pos <- pos[pos$tit != 0, ]
sum(pos$mon)
library(inhouse)
con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username="cism", password="cism", dbname="portafolio")
query <- paste("select ",
"fecha, carteramodelo, contrato, tot, reporto, tipo, emisora, serie, precio, tit, mon ",
"from posiciones where ",
"fecha in ('",
paste(fecha, collapse = "','"),
"') ",
sep="")
if(!is.null(contrato)) {
query <- paste(query,
"and contrato in ('",
paste(contrato, collapse ="','"),
"') ",
sep="")
}
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos2 <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie))
pos2
sum(pos2$mon)
head(pos2)
pos3 <- pos3  %>% group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon))
pos3 <- pos2  %>% group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon))
pos3
sum(pos3$mon)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie)) %>%
#group
group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon)) %>%
mutate(perc = mon/tot) %>%
as.data.frame()
pos$tit[pos$emisora=="EFECTIVO"] <- pos$mon[pos$emisora=="EFECTIVO"] # causaba incorrecta suma del total de valuacion
sum(pos$mon)
pos[pos$tit == 0, ]
library(inhouse)
con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username="cism", password="cism", dbname="portafolio")
query <- paste("select ",
"fecha, carteramodelo, contrato, tot, reporto, tipo, emisora, serie, precio, tit, mon ",
"from posiciones where ",
"fecha in ('",
paste(fecha, collapse = "','"),
"') ",
sep="")
if(!is.null(contrato)) {
query <- paste(query,
"and contrato in ('",
paste(contrato, collapse ="','"),
"') ",
sep="")
}
pos <- DBI::dbGetQuery(con, query)
DBI::dbDisconnect(con)
pos <- pos %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#repo
mutate(tipo = replace(tipo, reporto == "R", "")) %>%
mutate(emisora = replace(emisora, reporto == "R", "REPORTO")) %>%
mutate(serie = replace(serie, reporto == "R", "")) %>%
mutate(precio = replace(precio, reporto == "R", 1)) %>%
mutate(tit = replace(tit, reporto == "R", 0)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie)) %>%
#group
group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%
summarise(tit = sum(tit), mon = sum(mon)) %>%
mutate(perc = mon/tot) %>%
as.data.frame()
pos$tit[pos$emisora=="EFECTIVO"] <- pos$mon[pos$emisora=="EFECTIVO"] # causaba incorrecta suma del total de valuacion
pos$tit[pos$emisora=="REPORTO"] <- pos$mon[pos$emisora=="REPORTO"] # causaba incorrecta suma del total de valuacion
pos[pos$tit != 0, ]
pp <-   pos[pos$tit != 0, ]
sum(pp$mon)
library(inhouse)
position <- bl
library(inhouse)
get_blocked_position <- function(fecha, contrato = NULL){
con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username="cism", password="cism", dbname="portafolio")
query <- paste("select ",
"fecha, carteramodelo, contrato, tipo, emisora, serie, tit, mon ",
"from posicionbloqueada where fecha in ('",
paste(fecha, collapse = "','"),
"')", sep="")
bloq <- DBI::dbGetQuery(con, query)
bloq <- bloq %>%
#as date
mutate(fecha = as.Date(fecha)) %>%
#id
mutate(id = asset_id(tipo, emisora, serie)) %>%
as.data.frame()
# filter by contrato
if(!is.null(contrato)) {
bloq <- bloq %>% filter(contrato == contrato)
}
bloq
}
library(inhouse)
devtools::instal()
devtools::document()
library(inhouse)
devtools::install()
devtools::document()
devtools::install()
pos  <- get_position("2016-12-09")
pos_clean <- clean_position(pos)
pos_clean  %>% dplyr::summarise(mean=mean(tot))
pos  %>% dplyr::summarise(mean=mean(tot))
head(pos)
head(pos_clean)
sum(pos$mon)
sum(pos_clean$mon)
pos  %>% summarize_position(mon = sum(mon))
summarize_position <- function(position, groups = c("fecha", "carteramodelo", "id"), ...) {
if (!is.null(groups)) {
position <- position %>%
group_by_(.dots = lapply(paste0("~", groups), as.formula))
}
position %>%
tidyr::complete(nesting(contrato, tot),
nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0)) %>%
summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd = sd(perc), ...)  %>%
as.data.frame()
}
pos  %>% summarize_position(mon = sum(mon))
library(dplyr)
pos  %>% summarize_position(mon = sum(mon))
summarize_position <- function(position, groups = c("fecha", "carteramodelo", "id"), ...) {
if (!is.null(groups)) {
position <- position %>%
group_by_(.dots = lapply(paste0("~", groups), as.formula))
}
position %>%
tidyr::complete(tidyr::nesting(contrato, tot),
tidyr:: nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0)) %>%
summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd = sd(perc), ...)  %>%
as.data.frame()
}
pos  %>% summarize_position(mon = sum(mon))
pos  %>% summarize_position(mon = sum(mon))  %>%  head()
pos  %>% summarize_position(groups = NULL,, mon = sum(mon))  %>%  head()
pos  %>% summarize_position(groups = NULL, mon = sum(mon))  %>%  head()
sum(pos$mon)
pos  %>% filter(id == "51_ciusdc_0")
pos  %>% filter(emisora == "+CIUSD")
pos  %>% filter(id == "51_ciusdbf_2")  %>%  summarize_position()
position <- pos
position %>%
tidyr::complete(tidyr::nesting(contrato, tot),
tidyr:: nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0))  %>% head()
position %>%
tidyr::complete(tidyr::nesting(contrato, tot),
tidyr:: nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0)) %>%
summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd = sd(perc), ...)
position %>%
tidyr::complete(tidyr::nesting(contrato, tot),
tidyr:: nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0)) %>%
summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd = sd(perc))
dates <- inhouse::date_seq("20160930")
rm(list=ls())
library(inhouse)
date_seq
date_seq("20160930")
dates <- date_seq("20160930")
pp <- get_position(dates)
head(pp)
aum  <- pp  %>% summarize_position(groups = fecha)
position <- pp
groups = "fecha"
position <- position %>%
if (!is.null(groups)) {
position <- position %>%
group_by_(.dots = lapply(paste0("~", groups), as.formula))
}
groups
!is.null(groups)
summarize_position
position
summarize_position <- function(position, groups = c("fecha", "carteramodelo", "id"), ...) {
print(groups)
position <- position %>%
if (!is.null(groups)) {
position <- position %>%
group_by_(.dots = lapply(paste0("~", groups), as.formula))
}
position %>%
tidyr::complete(tidyr::nesting(contrato, tot),
tidyr:: nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0)) %>%
summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd = sd(perc), ...)  %>%
as.data.frame()
}
aum  <- pp  %>% summarize_position(groups = "fecha")
summarize_position <- function(position, groups = c("fecha", "carteramodelo", "id"), ...) {
if (!is.null(groups)) {
position <- position %>%
group_by_(.dots = lapply(paste0("~", groups), as.formula))
}
position %>%
tidyr::complete(tidyr::nesting(contrato, tot),
tidyr:: nesting(id, reporto, tipo, emisora, serie),
fill = list(tit=0, mon = 0)) %>%
summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd = sd(perc), ...)  %>%
as.data.frame()
}
aum  <- pp  %>% summarize_position(groups = "fecha")
devtools::install()
devtools:document()
devtools::document()
rm(list=ls())
help(package="inhouse")
dates <- date_seq("20160930")
library(inhouse)
dates <- date_seq("20160930")
pos <- get_position(dates)
aum <- pos  %>% summarize_position(groups = "fecha")
head(aum)
aum
aum %>% filter(fecha != ymd("20161025"))
aum %>% filter(fecha != ymd("20161025"))
library(dplyr)
aum %>% filter(fecha != ymd("20161025"))
library(lubdridate)
library(lubridate)
aum %>% filter(fecha != ymd("20161025"))
aum %>% filter(fecha != ymd("20161025") & fecga != ymd("20161005"))
aum %>% filter(fecha != ymd("20161025") & fecha != ymd("20161005"))
aum <- aum %>% filter(fecha != ymd("20161025") & fecha != ymd("20161005"))
library(xts)
aum <- xts(aum[ ,-1], aum[ ,1])
aum
aum <- aum[ ,1]
aum
plot(aum)
devtools::install()
library(inhouse)
date_seq
from <- str_extract(period, "[0-9]+/")
period <- "20161210/"
stringr::str_extract(period, "[0-9]+/")
fromto <- strsplit("period",/)
fromto <- strsplit(period, "/")
fromto
date_seq <- function(period, by = 1) {
fromto <- strsplit(period, "/")
if(length(fromto) == 1) {
fromto[[2]] <- Sys.Date()
}
seq.Date(from = lubridate::ymd(fromto[[1]]), to = lubridate::ymd(fromto[[2]]), by = by)
}
date_seq("20151231/")
date_seq("20151231/20160201")
period <-
"20151231/20160201"
period
fromto <- strsplit(period, "/")
fromto
fromto <- unlist(strsplit(period, "/"))
length(fromto) == 1
date_seq <- function(period, by = 1) {
fromto <- unlist(strsplit(period, "/"))
if(length(fromto) == 1) {
fromto[2] <- Sys.Date()
}
seq.Date(from = lubridate::ymd(fromto[[1]]), to = lubridate::ymd(fromto[[2]]), by = by)
}
date_seq("2015-12-31")
date_seq <- function(period, by = 1) {
fromto <- unlist(strsplit(period, "/"))
if(length(fromto) == 1) {
fromto[2] <- Sys.Date()
}
seq.Date(from = lubridate::ymd(fromto[1]), to = lubridate::ymd(fromto[2]), by = by)
}
date_seq("2015-12-31")
date_seq("20151231/")
fromto <- unlist(strsplit(period, "/"))
if(length(fromto) == 1) {
fromto[2] <- Sys.Date()
}
from
fromto[1]
ymd(fromto[1])
ymd(fromto[2])
seq.Date(from = lubridate::ymd(fromto[1]), to = lubridate::ymd(fromto[2]), by = by)
by = 1
date_seq <- function(period, by = 1) {
fromto <- unlist(strsplit(period, "/"))
if(length(fromto) == 1) {
fromto[2] <- Sys.Date()
}
seq.Date(from = lubridate::ymd(fromto[1]), to = lubridate::ymd(fromto[2]), by = by)
}
date_seq("20151231/")
date_seq("20151231")
date_seq("20151231/")
period <- "20151231/"
fromto <- unlist(strsplit(period, "/"))
fromto
length(fromto)
if(length(fromto) == 1) {
fromto[2] <- Sys.Date()
}
fromto
date_seq <- function(period, by = 1) {
fromto <- unlist(strsplit(period, "/"))
if(length(fromto) == 1) {
fromto[2] <- as.character(Sys.Date())
}
seq.Date(from = lubridate::ymd(fromto[1]), to = lubridate::ymd(fromto[2]), by = by)
}
date_seq("20151231/")
date_seq("20151231/20160201")
remove.packages("inhouse")
devtools::install(inhouse)
devtools::install()
devtools::document(inhouse)
devtools::install(inhouse)
devtools::document()
devtools::install()
devtools::document()
devtools::install()
