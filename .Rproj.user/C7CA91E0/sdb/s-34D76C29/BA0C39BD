{
    "contents" : "create_pos <- function(date, contrato = NULL){\n  con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username=\"cism\", password=\"cism\", dbname=\"portafolio\")\n\n  query <- paste(\"select \",\n                 \"fecha, carteramodelo, contrato, tot, reporto, tipo, emisora, serie, precio, tit, mon \",\n                 \"from posiciones where \",\n                 \"fecha in ('\",\n                 \"') \",\n                 sep=\"\")\n\n  if(!is.null(contrato)) {\n    query <- paste(query,\n                   \"and contrato in ('\",\n                   paste(contrato, collapse =\"','\"),\n                   \"') \",\n                   sep=\"\")\n  }\n\n  pos <- DBI::dbGetQuery(con, query)\n  DBI::dbDisconnect(con)\n\n  pos <- pos %>%\n    #as date\n    mutate(fecha = as.Date(fecha)) %>%\n    #repo\n    mutate(tipo = replace(tipo, reporto == \"R\", \"\")) %>%\n    mutate(emisora = replace(emisora, reporto == \"R\", \"EFECTIVO\")) %>%\n    mutate(serie = replace(serie, reporto == \"R\", \"\")) %>%\n    mutate(precio = replace(precio, reporto == \"R\", 1)) %>%\n    mutate(tit = replace(tit, reporto == \"R\", 0)) %>%\n    #id\n    mutate(id = asset_id(tipo, emisora, serie)) %>%\n    #group\n    group_by(fecha, carteramodelo, contrato, tot, id, reporto, tipo, emisora, serie, precio) %>%\n    summarise(tit = sum(tit), mon = sum(mon)) %>%\n    as.data.frame()\n\n  pos$tit[pos$emisora==\"EFECTIVO\"] <- pos$mon[pos$emisora==\"EFECTIVO\"]\n  pos[pos$tit > 0, ]\n}\n\ncreate_bloq <- function(date){\n  con <- DBI::dbConnect(RMySQL::MySQL(), host='CISM21', username=\"cism\", password=\"cism\", dbname=\"portafolio\")\n  query <- paste(\"select \",\n                 \"fecha, carteramodelo, contrato, tipo, emisora, serie, tit, mon \",\n                 \"from posicionbloqueada where fecha in ('\",\n                 paste(date, collapse = \"','\"),\n                 \"')\", sep=\"\")\n  bloq <- DBI::dbGetQuery(con, query)\n\n  bloq %>%\n    #as date\n    mutate(fecha = as.Date(fecha)) %>%\n    #id\n    mutate(id = asset_id(tipo, emisora, serie)) %>%\n    as.data.frame()\n}\n\nrm_bloq.pos <- function(pos, bloq) {\n  pos_key <- paste(pos$fecha, pos$contrato, pos$id)\n  bloq_key <- paste(bloq$fecha, bloq$contrato, bloq$id)\n  bloq_idx <- match(pos_key, bloq_key)\n\n  tit <- -bloq$tit[bloq_idx]\n  tit[is.na(tit)] <- 0\n\n  pos$tit <- pos$tit + tit\n  pos <- pos[pos$tit > 0, ]\n  pos$mon <- pos$precio * pos$tit\n\n  pos %>%\n    group_by(contrato) %>%\n    mutate(tot=sum(mon)) %>%\n  as.data.frame()\n}\n\noutliers.pos <- function(pos) {\n  pos %>%\n    #complete\n    group_by(fecha, carteramodelo) %>%\n    complete(nesting(contrato, tot),\n             nesting(id, reporto, tipo, emisora, serie),\n             fill = list(tit=0, mon = 0)) %>%\n    #filter\n    mutate(perc = mon/tot) %>%\n    group_by(fecha, carteramodelo, id) %>%\n    mutate(sum_mon = sum(mon), perc_median = median(perc)) %>%\n    filter(perc_median == 0) %>%\n    filter(!is.na(precio)) %>%\n    as.data.frame()\n}\n\n\nclean.pos <- function(pos) {\n  pos %>%\n    #complete\n    group_by(fecha, carteramodelo) %>%\n    complete(nesting(contrato, tot),\n             nesting(id, reporto, tipo, emisora, serie),\n             fill = list(tit=0, mon = 0)) %>%\n    #filter\n    mutate(perc = mon/tot) %>%\n    group_by(fecha, carteramodelo, id) %>%\n    mutate(sum_mon = sum(mon), perc_median = median(perc)) %>%\n    filter(!perc_median == 0) %>%\n    as.data.frame()\n}\n\nasset_stats.pos <- function(pos) {\n  pos %>%\n    group_by(fecha, carteramodelo, id) %>%\n    summarize(sum_mon = sum(mon), perc_median = median(perc), perc_mean = mean(perc), perc_sd =sd(perc))  %>%\n    as.data.frame()\n}\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1479155247486.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3538326482",
    "id" : "BA0C39BD",
    "lastKnownWriteTime" : 1479155515,
    "path" : "C:/Github/inhouse/R/posiciones.R",
    "project_path" : "R/posiciones.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}